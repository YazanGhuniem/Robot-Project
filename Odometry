rom ev3dev2.motor import MoveTank,Motor,SpeedPercent,SpeedRPM,OUTPUT_A,OUTPUT_B, follow_for_ms
from ev3dev2.sensor.lego import GyroSensor
import math
import time
# need to do testing to figure out the optimal left/right rpm, as the motors have different speeds.
LS = SpeedRPM(0)
RS = SpeedRPM(0)
Location = [0,0]
Move = MoveTank(OUTPUT_B, OUTPUT_A)
Gyro = GyroSensor()
Move.gyro = GyroSensor()
Move.gyro.calibrate()
def StraightLine(Dist):
    if Dist > 0:
        #Dist should be in mm and positive
        angle = round(Gyro.angle / 90) * 90 
        T =(Dist/131) * 1000  
        Move.follow_gyro_angle(11.3, 0.05, 3.2, SpeedRPM(60), angle, follow_for = follow_for_ms, ms = T)
        # I need to test this still. Will get around to it this week probably.
        Location[0] = Dist * math.cos(angle)
        Location[1] = Dist * math.sin(angle)
        return('success')
    else:
        return('Distance must a positive float value')
def Turn90(dir):
    # this function turns the bot 90 degrees in the direction specified (1 or -1)
    if dir == 1 or dir == -1:
        Move.turn_degrees(SpeedRPM(30),90*dir,True,0)
        return(Gyro.angle)
    else:
        return('direction must be either 1 or -1')
def Vector(target):
    Diff = [target[0]-Location[0],target[1]-Location[1]]
    Vect = [(Diff[0]^2+Diff[1]^2)^.5,math.atan(Diff(0)/Diff(1))]
    return ([Diff,Vect])
print(Turn90(int(input('Enter dir value: '))))
for n in range(8):
    print(Turn90(1))
